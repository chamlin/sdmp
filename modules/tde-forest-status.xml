<template xmlns="http://marklogic.com/xdmp/tde">
    <path-namespaces>
        <path-namespace>
            <prefix>fs</prefix>
            <namespace-uri>http://marklogic.com/xdmp/status/forest</namespace-uri>
        </path-namespace>
    </path-namespaces>
    <context>/fs:forest-status</context>
    <vars>
        <!-- b - base; p - prefix -->
        <var>
            <name>B</name>
            <val>xs:string ('http://marklogic.com/sdmp')</val>
        </var>
        <var>
            <name>BSLASH</name>
            <val>xs:string (fn:concat ($B, '/'))</val>
        </var>
        <var>
            <name>F</name>
            <val>xs:string (fn:concat ($B, '/forest'))</val>
        </var>
        <var>
            <name>FSHARP</name>
            <val>xs:string (fn:concat ($F, '#'))</val>
        </var>
        <var>
            <name>FIRI</name>
            <val>sem:iri (fn:concat ($FSHARP, fs:forest-id))</val>
        </var>
    </vars>
    <triples>
        <triple>
            <subject>
                <val>$FIRI</val>
            </subject>
            <predicate>
                <val>sem:iri('http://www.w3.org/2000/01/rdf-schema#a')</val>
            </predicate>
            <object>
                <val>sem:iri($F)</val>
            </object>
        </triple>
        <triple>
            <subject>
                <val>$FIRI</val>
            </subject>
            <predicate>
                <val>sem:iri($BSLASH||'forestName')</val>
            </predicate>
            <object>
                <val>xs:string(fs:forest-name)</val>
            </object>
        </triple>
        <triple>
            <subject>
                <val>$FIRI</val>
            </subject>
            <predicate>
                <val>sem:iri($BSLASH||'forestId')</val>
            </predicate>
            <object>
                <val>xs:unsignedLong(fs:forest-id)</val>
            </object>
        </triple>
        <triple>
            <subject>
                <val>$FIRI</val>
            </subject>
            <predicate>
                <val>sem:iri($BSLASH||'hostId')</val>
            </predicate>
            <object>
                <val>xs:unsignedLong(fs:host-id)</val>
            </object>
        </triple>
        <triple>
            <subject>
                <val>$FIRI</val>
            </subject>
            <predicate>
                <val>sem:iri($BSLASH||'state')</val>
            </predicate>
            <object>
                <val>xs:string(fs:state)</val>
            </object>
        </triple>
        <triple>
            <subject>
                <val>$FIRI</val>
            </subject>
            <predicate>
                <val>sem:iri($BSLASH||'enabled')</val>
            </predicate>
            <object>
                <val>xs:boolean(fs:enabled)</val>
            </object>
        </triple>
        <triple>
            <subject>
                <val>$FIRI</val>
            </subject>
            <predicate>
                <val>sem:iri($BSLASH||'availability')</val>
            </predicate>
            <object>
                <val>xs:string(fs:availability)</val>
                <invalid-values>ignore</invalid-values>
            </object>
        </triple>
        <triple>
            <subject>
                <val>$FIRI</val>
            </subject>
            <predicate>
                <val>sem:iri($BSLASH||'updatesAllowed')</val>
            </predicate>
            <object>
                <val>xs:string(fs:updates-allowed)</val>
            </object>
        </triple>
        <triple>
            <subject>
                <val>$FIRI</val>
            </subject>
            <predicate>
                <val>sem:iri($BSLASH||'rebalancerEnable')</val>
            </predicate>
            <object>
                <val>xs:boolean(fs:rebalancer-enable)</val>
                <invalid-values>ignore</invalid-values>                
            </object>
        </triple>
        <triple>
            <subject>
                <val>$FIRI</val>
            </subject>
            <predicate>
                <val>sem:iri($BSLASH||'masterForest')</val>
            </predicate>
            <object>
                <val>xs:unsignedLong(fs:master-forest)</val>
            </object>
        </triple>
        <triple>
            <subject>
                <val>$FIRI</val>
            </subject>
            <predicate>
                <val>sem:iri($BSLASH||'currentMasterForest')</val>
            </predicate>
            <object>
                <val>xs:unsignedLong(fs:current-master-forest)</val>
            </object>
        </triple>
        <triple>
            <subject>
                <val>$FIRI</val>
            </subject>
            <predicate>
                <val>sem:iri($BSLASH||'currentMasterPreciseTime')</val>
            </predicate>
            <object>
                <val>xs:dateTime(fs:current-master-precise-time)</val>
            </object>
        </triple>
        <triple>
            <subject>
                <val>$FIRI</val>
            </subject>
            <predicate>
                <val>sem:iri($BSLASH||'currentMasterFsn')</val>
            </predicate>
            <object>
                <val>xs:unsignedLong(fs:current-master-fsn)</val>
            </object>
        </triple>
        <triple>
            <subject>
                <val>$FIRI</val>
            </subject>
            <predicate>
                <val>sem:iri($BSLASH||'databaseId')</val>
            </predicate>
            <object>
                <val>xs:unsignedLong(fs:database-id)</val>
                <invalid-values>ignore</invalid-values>  
            </object>
        </triple>
        <triple>
            <subject>
                <val>$FIRI</val>
            </subject>
            <predicate>
                <val>sem:iri($BSLASH||'lastStateChange')</val>
            </predicate>
            <object>
                <val>xs:dateTime(fs:last-state-change)</val>
            </object>
        </triple>
        <triple>
            <subject>
                <val>$FIRI</val>
            </subject>
            <predicate>
                <val>sem:iri($BSLASH||'nonblockingTimestamp')</val>
            </predicate>
            <object>
                <val>xs:unsignedLong(fs:nonblocking-timestamp)</val>
            </object>
        </triple>
        <triple>
            <subject>
                <val>$FIRI</val>
            </subject>
            <predicate>
                <val>sem:iri($BSLASH||'dataDir')</val>
            </predicate>
            <object>
                <val>xs:string(fs:data-dir)</val>
            </object>
        </triple>
        <triple>
            <subject>
                <val>$FIRI</val>
            </subject>
            <predicate>
                <val>sem:iri($BSLASH||'journalsSize')</val>
            </predicate>
            <object>
                <val>xs:unsignedLong(fs:journals-size)</val>
            </object>
        </triple>
        <triple>
            <subject>
                <val>$FIRI</val>
            </subject>
            <predicate>
                <val>sem:iri($BSLASH||'largeDataSize')</val>
            </predicate>
            <object>
                <val>xs:unsignedLong(fs:large-data-size)</val>
            </object>
        </triple>
        <triple>
            <subject>
                <val>$FIRI</val>
            </subject>
            <predicate>
                <val>sem:iri($BSLASH||'orphanedBinaries')</val>
            </predicate>
            <object>
                <val>xs:unsignedLong(fs:orphaned-binaries)</val>
            </object>
        </triple>
    </triples>
    <templates>
        <template>
            <context>fs:stands/fs:stand</context>
            <vars>
                <var>
                    <name>S</name>
                    <val>xs:string ('http://marklogic.com/sdmp/stand')</val>
                </var>        
                <var>
                    <name>SSLASH</name>
                    <val>xs:string (fn:concat ($S, '/'))</val>
                </var>
                <var>
                    <name>SSHARP</name>
                    <val>xs:string (fn:concat ($S, '#'))</val>
                </var>
                <var>
                    <name>SIRI</name>
                    <val>sem:iri (fn:concat ($SSHARP, fs:stand-id))</val>
                </var>              
            </vars>
            <triples>
                <triple>
                    <subject>
                        <val>$SIRI</val>
                    </subject>
                    <predicate>
                        <val>sem:iri('http://www.w3.org/2000/01/rdf-schema#a')</val>
                    </predicate>
                    <object>
                        <val>sem:iri($S)</val>
                    </object>
                </triple>
                <triple>
                    <subject>
                        <val>$FIRI</val>
                    </subject>
                    <predicate>
                        <val>sem:iri('http://marklogic.com/sdmp/forest/hasStand')</val>
                    </predicate>
                    <object>
                        <val>$SIRI</val>
                    </object>
                </triple>
                <triple>
                    <subject>
                        <val>$SIRI</val>
                    </subject>
                    <predicate>
                        <val>sem:iri($BSLASH||'standId')</val>
                    </predicate>
                    <object>
                        <val>xs:unsignedLong(fs:stand-id)</val>
                    </object>
                </triple>
                <triple>
                    <subject>
                        <val>$SIRI</val>
                    </subject>
                    <predicate>
                        <val>sem:iri($BSLASH||'path')</val>
                    </predicate>
                    <object>
                        <val>xs:string(fs:path)</val>
                    </object>
                </triple>
                <triple>
                    <subject>
                        <val>$SIRI</val>
                    </subject>
                    <predicate>
                        <val>sem:iri($BSLASH||'isFast')</val>
                    </predicate>
                    <object>
                        <val>xs:boolean(fs:is-fast)</val>
                        <invalid-values>ignore</invalid-values>  
                    </object>
                </triple>
                <triple>
                    <subject>
                        <val>$SIRI</val>
                    </subject>
                    <predicate>
                        <val>sem:iri($BSLASH||'labelVersion')</val>
                    </predicate>
                    <object>
                        <val>xs:unsignedLong(fs:label-version)</val>
                    </object>
                </triple>
                <triple>
                    <subject>
                        <val>$SIRI</val>
                    </subject>
                    <predicate>
                        <val>sem:iri($BSLASH||'diskSize')</val>
                    </predicate>
                    <object>
                        <val>xs:unsignedLong(fs:disk-size)</val>
                    </object>
                </triple>
                <triple>
                    <subject>
                        <val>$SIRI</val>
                    </subject>
                    <predicate>
                        <val>sem:iri($BSLASH||'memorySize')</val>
                    </predicate>
                    <object>
                        <val>xs:unsignedLong(fs:memory-size)</val>
                    </object>
                </triple>
                <triple>
                    <subject>
                        <val>$SIRI</val>
                    </subject>
                    <predicate>
                        <val>sem:iri($BSLASH||'listCacheHits')</val>
                    </predicate>
                    <object>
                        <val>xs:unsignedLong(fs:list-cache-hits)</val>
                    </object>
                </triple>
                <triple>
                    <subject>
                        <val>$SIRI</val>
                    </subject>
                    <predicate>
                        <val>sem:iri($BSLASH||'listCacheMisses')</val>
                    </predicate>
                    <object>
                        <val>xs:unsignedLong(fs:list-cache-misses)</val>
                    </object>
                </triple>
                <triple>
                    <subject>
                        <val>$SIRI</val>
                    </subject>
                    <predicate>
                        <val>sem:iri($BSLASH||'listCacheHitRate')</val>
                    </predicate>
                    <object>
                        <val>xs:unsignedLong(fs:list-cache-hit-rate)</val>
                    </object>
                </triple>
                <triple>
                    <subject>
                        <val>$SIRI</val>
                    </subject>
                    <predicate>
                        <val>sem:iri($BSLASH||'listCacheMissRate')</val>
                    </predicate>
                    <object>
                        <val>xs:unsignedLong(fs:list-cache-miss-rate)</val>
                    </object>
                </triple>
                <triple>
                    <subject>
                        <val>$SIRI</val>
                    </subject>
                    <predicate>
                        <val>sem:iri($BSLASH||'compressedTreeCacheHits')</val>
                    </predicate>
                    <object>
                        <val>xs:unsignedLong(fs:compressed-tree-cache-hits)</val>
                    </object>
                </triple>
                <triple>
                    <subject>
                        <val>$SIRI</val>
                    </subject>
                    <predicate>
                        <val>sem:iri($BSLASH||'compressedTreeCacheMisses')</val>
                    </predicate>
                    <object>
                        <val>xs:unsignedLong(fs:compressed-tree-cache-misses)</val>
                    </object>
                </triple>
                <triple>
                    <subject>
                        <val>$SIRI</val>
                    </subject>
                    <predicate>
                        <val>sem:iri($BSLASH||'compressedTreeCacheHitRate')</val>
                    </predicate>
                    <object>
                        <val>xs:float(fs:compressed-tree-cache-hit-rate)</val>
                    </object>
                </triple>
                <triple>
                    <subject>
                        <val>$SIRI</val>
                    </subject>
                    <predicate>
                        <val>sem:iri($BSLASH||'obsolete')</val>
                    </predicate>
                    <object>
                        <val>xs:boolean(fs:obsolete)</val>
                        <invalid-values>ignore</invalid-values>
                    </object>
                </triple>
                <triple>
                    <subject>
                        <val>$SIRI</val>
                    </subject>
                    <predicate>
                        <val>sem:iri($BSLASH||'compressedTreeCacheMissRate')</val>
                    </predicate>
                    <object>
                        <val>xs:float(fs:compressed-tree-cache-miss-rate)</val>
                    </object>
                </triple>
                <triple>
                    <subject>
                        <val>$SIRI</val>
                    </subject>
                    <predicate>
                        <val>sem:iri($BSLASH||'tripleCacheHits')</val>
                    </predicate>
                    <object>
                        <val>xs:unsignedLong(fs:triple-cache-hits)</val>
                        <invalid-values>ignore</invalid-values>  
                    </object>
                </triple>
                <triple>
                    <subject>
                        <val>$SIRI</val>
                    </subject>
                    <predicate>
                        <val>sem:iri($BSLASH||'tripleCacheMisses')</val>
                    </predicate>
                    <object>
                        <val>xs:unsignedLong(fs:triple-cache-misses)</val>
                        <invalid-values>ignore</invalid-values>                          
                    </object>
                </triple>
                <triple>
                    <subject>
                        <val>$SIRI</val>
                    </subject>
                    <predicate>
                        <val>sem:iri($BSLASH||'tripleCacheHitRate')</val>
                    </predicate>
                    <object>
                        <val>xs:float(fs:triple-cache-hit-rate)</val>
                        <invalid-values>ignore</invalid-values>                          
                    </object>
                </triple>
                <triple>
                    <subject>
                        <val>$SIRI</val>
                    </subject>
                    <predicate>
                        <val>sem:iri($BSLASH||'tripleCacheMissRate')</val>
                    </predicate>
                    <object>
                        <val>xs:float(fs:triple-cache-miss-rate)</val>
                        <invalid-values>ignore</invalid-values>                          
                    </object>
                </triple>
                <triple>
                    <subject>
                        <val>$SIRI</val>
                    </subject>
                    <predicate>
                        <val>sem:iri($BSLASH||'tripleValueCacheHits')</val>
                    </predicate>
                    <object>
                        <val>xs:unsignedLong(fs:triple-value-cache-hits)</val>
                        <invalid-values>ignore</invalid-values>                          
                    </object>
                </triple>
                <triple>
                    <subject>
                        <val>$SIRI</val>
                    </subject>
                    <predicate>
                        <val>sem:iri($BSLASH||'tripleValueCacheMisses')</val>
                    </predicate>
                    <object>
                        <val>xs:unsignedLong(fs:triple-value-cache-misses)</val>
                        <invalid-values>ignore</invalid-values>                          
                    </object>
                </triple>
                <triple>
                    <subject>
                        <val>$SIRI</val>
                    </subject>
                    <predicate>
                        <val>sem:iri($BSLASH||'tripleValueCacheHitRate')</val>
                    </predicate>
                    <object>
                        <val>xs:unsignedLong(fs:triple-value-cache-hit-rate)</val>
                        <invalid-values>ignore</invalid-values>                          
                    </object>
                </triple>
                <triple>
                    <subject>
                        <val>$SIRI</val>
                    </subject>
                    <predicate>
                        <val>sem:iri($BSLASH||'tripleValueCacheMissRate')</val>
                    </predicate>
                    <object>
                        <val>xs:unsignedLong(fs:triple-value-cache-miss-rate)</val>
                        <invalid-values>ignore</invalid-values>                          
                    </object>
                </triple>
            </triples>
        </template>
            <template>
            <context>fs:unclosed-stands/fs:unclosed-stand</context>
            <vars>
                <var>
                    <name>S</name>
                    <val>xs:string ('http://marklogic.com/sdmp/stand')</val>
                </var>        
                <var>
                    <name>SSLASH</name>
                    <val>xs:string (fn:concat ($S, '/'))</val>
                </var>
                <var>
                    <name>SSHARP</name>
                    <val>xs:string (fn:concat ($S, '#'))</val>
                </var>
                <var>
                    <name>SIRI</name>
                    <val>sem:iri (fn:concat ($SSHARP, fs:stand-id))</val>
                </var>              
            </vars>
            <triples>
                <triple>
                    <subject>
                        <val>$SIRI</val>
                    </subject>
                    <predicate>
                        <val>sem:iri('http://www.w3.org/2000/01/rdf-schema#a')</val>
                    </predicate>
                    <object>
                        <val>sem:iri($S)</val>
                    </object>
                </triple>
                <triple>
                    <subject>
                        <val>$FIRI</val>
                    </subject>
                    <predicate>
                        <val>sem:iri('http://marklogic.com/sdmp/forest/hasUnclosedStand')</val>
                    </predicate>
                    <object>
                        <val>$SIRI</val>
                    </object>
                </triple>
                <triple>
                    <subject>
                        <val>$SIRI</val>
                    </subject>
                    <predicate>
                        <val>sem:iri($BSLASH||'unclosed')</val>
                    </predicate>
                    <object>
                        <val>xs:boolean (fn:true())</val>
                    </object>
                </triple>
                <triple>
                    <subject>
                        <val>$SIRI</val>
                    </subject>
                    <predicate>
                        <val>sem:iri($BSLASH||'standId')</val>
                    </predicate>
                    <object>
                        <val>xs:unsignedLong(fs:stand-id)</val>
                    </object>
                </triple>
                <triple>
                    <subject>
                        <val>$SIRI</val>
                    </subject>
                    <predicate>
                        <val>sem:iri($BSLASH||'path')</val>
                    </predicate>
                    <object>
                        <val>xs:string(fs:path)</val>
                    </object>
                </triple>
                <triple>
                    <subject>
                        <val>$SIRI</val>
                    </subject>
                    <predicate>
                        <val>sem:iri($BSLASH||'diskSize')</val>
                    </predicate>
                    <object>
                        <val>xs:unsignedLong(fs:disk-size)</val>
                    </object>
                </triple>
                <triple>
                    <subject>
                        <val>$SIRI</val>
                    </subject>
                    <predicate>
                        <val>sem:iri($BSLASH||'memorySize')</val>
                    </predicate>
                    <object>
                        <val>xs:unsignedLong(fs:memory-size)</val>
                    </object>
                </triple>
                <triple>
                    <subject>
                        <val>$SIRI</val>
                    </subject>
                    <predicate>
                        <val>sem:iri($BSLASH||'hasReference')</val>
                    </predicate>
                    <object>
                        <val>fn:exists (fs:reference)</val>
                        <invalid-values>ignore</invalid-values>
                    </object>
                </triple>
            </triples>
        </template>
    </templates>
</template>
