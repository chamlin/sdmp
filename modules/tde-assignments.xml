<template xmlns="http://marklogic.com/xdmp/tde">
    <path-namespaces>
        <path-namespace>
            <prefix>a</prefix>
            <namespace-uri>http://marklogic.com/xdmp/assignments</namespace-uri>
        </path-namespace>
    </path-namespaces>
    <context>/a:assignments/a:assignment</context>
    <vars>
        <!-- b - base; p - prefix -->
        <var>
            <name>B</name>
            <val>xs:string ('http://marklogic.com/sdmp')</val>
        </var>
        <var>
            <name>BSLASH</name>
            <val>xs:string (fn:concat ($B, '/'))</val>
        </var>
        <var>
            <name>F</name>
            <val>xs:string (fn:concat ($B, '/forest'))</val>
        </var>
        <var>
            <name>FSHARP</name>
            <val>xs:string (fn:concat ($F, '#'))</val>
        </var>
        <var>
            <name>FIRI</name>
            <val>sem:iri (fn:concat ($FSHARP, a:forest-id))</val>
        </var>
    </vars>
    <triples>
        <triple>
            <subject>
                <val>$FIRI</val>
            </subject>
            <predicate>
                <val>sem:iri('http://www.w3.org/2000/01/rdf-schema#a')</val>
            </predicate>
            <object>
                <val>sem:iri($F)</val>
            </object>
        </triple>
        <triple>
            <subject>
                <val>$FIRI</val>
            </subject>
            <predicate>
                <val>sem:iri($BSLASH||'forestName')</val>
            </predicate>
            <object>
                <val>xs:string(a:forest-name)</val>
            </object>
        </triple>
        <triple>
            <subject>
                <val>$FIRI</val>
            </subject>
            <predicate>
                <val>sem:iri($BSLASH||'enabled')</val>
            </predicate>
            <object>
                <val>xs:boolean(a:enabled)</val>
            </object>
        </triple>
        <triple>
            <subject>
                <val>sem:iri('http://marklogic.com/sdmp/host#'||xs:string(a:host))</val>
            </subject>
            <predicate>
                <val>sem:iri($BSLASH||'hasForest')</val>
            </predicate>
            <object>
                <val>$FIRI</val>
            </object>
        </triple>
        <triple>
            <subject>
                <val>$FIRI</val>
            </subject>
            <predicate>
                <val>sem:iri($BSLASH||'dataDirectory')</val>
            </predicate>
            <object>
                <val>xs:string(a:data-directory)</val>
            </object>
        </triple>
        <triple>
            <subject>
                <val>$FIRI</val>
            </subject>
            <predicate>
                <val>sem:iri($BSLASH||'largeDataDirectory')</val>
            </predicate>
            <object>
                <val>xs:string(a:large-data-directory)</val>
            </object>
        </triple>
        <triple>
            <subject>
                <val>$FIRI</val>
            </subject>
            <predicate>
                <val>sem:iri($BSLASH||'fastDataDirectory')</val>
            </predicate>
            <object>
                <val>xs:string(a:fast-data-directory)</val>
            </object>
        </triple>
        <triple>
            <subject>
                <val>$FIRI</val>
            </subject>
            <predicate>
                <val>sem:iri($BSLASH||'updatesAllowed')</val>
            </predicate>
            <object>
                <val>xs:string(a:updates-allowed)</val>
            </object>
        </triple>
        <triple>
            <subject>
                <val>$FIRI</val>
            </subject>
            <predicate>
                <val>sem:iri($BSLASH||'failoverEnable')</val>
            </predicate>
            <object>
                <val>xs:boolean(a:failover-enable)</val>
            </object>
        </triple>

        <triple>
            <subject>
                <val>$FIRI</val>
            </subject>
            <predicate>
                <val>sem:iri($BSLASH||'forestId')</val>
            </predicate>
            <object>
                <val>xs:unsignedLong(a:forest-id)</val>
            </object>
        </triple>
        <triple>
            <subject>
                <val>$FIRI</val>
            </subject>
            <predicate>
                <val>sem:iri($BSLASH||'forestBackups')</val>
            </predicate>
            <object>
                <val>xs:string(a:forest-backups)</val>
                <invalid-values>ignore</invalid-values>
            </object>
        </triple>

        <triple>
            <subject>
                <val>$FIRI</val>
            </subject>
            <predicate>
                <val>sem:iri($BSLASH||'databaseReplication')</val>
            </predicate>
            <object>
                <val>xs:string(a:database-replication)</val>
                <invalid-values>ignore</invalid-values>
            </object>
        </triple>
    </triples>
    <templates>
        <template>
            <context>a:forest-replicas/a:forest-replica</context>
            <triples>
                <triple>
                    <subject>
                        <val>$FIRI</val>
                    </subject>
                    <predicate>
                        <val>sem:iri($BSLASH||'hasReplica')</val>
                    </predicate>
                    <object>
                        <val>sem:iri($FSHARP||xs:string(.))</val>
                        <!--<invalid-values>ignore</invalid-values>-->
                    </object>
                </triple>
            </triples>
        </template>
        <template>
            <context>a:failover-hosts/a:failover-host</context>
            <triples>
                <triple>
                    <subject>
                        <val>$FIRI</val>
                    </subject>
                    <predicate>
                        <val>sem:iri($BSLASH||'failoverHost')</val>
                    </predicate>
                    <object>
                        <val>xs:unsignedLong(.)</val>
                        <invalid-values>ignore</invalid-values>
                    </object>
                </triple>
            </triples>
        </template>
    </templates>
</template>
