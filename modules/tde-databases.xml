<template xmlns="http://marklogic.com/xdmp/tde">
    <!-- TODO add back the complicated stuff (indexes, etc.) -->
    <path-namespaces>
        <path-namespace>
            <prefix>db</prefix>
            <namespace-uri>http://marklogic.com/xdmp/database</namespace-uri>
        </path-namespace>
    </path-namespaces>
    <context>/db:databases/db:database</context>
    <vars>
        <!-- b - base; p - prefix -->
        <var>
            <name>B</name>
            <val>xs:string ('http://marklogic.com/sdmp')</val>
        </var>
        <var>
            <name>BSLASH</name>
            <val>xs:string (fn:concat ($B, '/'))</val>
        </var>
        <var>
            <name>D</name>
            <val>xs:string (fn:concat ($B, '/database'))</val>
        </var>
        <var>
            <name>DSHARP</name>
            <val>xs:string (fn:concat ($D, '#'))</val>
        </var>
        <var>
            <name>DIRI</name>
            <val>sem:iri (fn:concat ($DSHARP, db:database-id))</val>
        </var>
    </vars>
    <triples>
        <triple>
            <subject>
                <val>$DIRI</val>
            </subject>
            <predicate>
                <val>sem:iri('http://www.w3.org/2000/01/rdf-schema#a')</val>
            </predicate>
            <object>
                <val>sem:iri($D)</val>
            </object>
        </triple>
        <triple>
            <subject>
                <val>$DIRI</val>
            </subject>
            <predicate>
                <val>sem:iri($BSLASH||'databaseId')</val>
            </predicate>
            <object>
                <val>xs:unsignedLong(db:database-id)</val>
            </object>
        </triple>
        <triple>
            <subject>
                <val>$DIRI</val>
            </subject>
            <predicate>
                <val>sem:iri($BSLASH||'databaseName')</val>
            </predicate>
            <object>
                <val>xs:string(db:database-name)</val>
            </object>
        </triple>
        <triple>
            <subject>
                <val>$DIRI</val>
            </subject>
            <predicate>
                <val>sem:iri($BSLASH||'enabled')</val>
            </predicate>
            <object>
                <val>xs:boolean(db:enabled)</val>
            </object>
        </triple>
        <triple>
            <subject>
                <val>$DIRI</val>
            </subject>
            <predicate>
                <val>sem:iri($BSLASH||'securityDatabase')</val>
            </predicate>
            <object>
                <val>xs:unsignedLong(db:security-database)</val>
            </object>
        </triple>
        <triple>
            <subject>
                <val>$DIRI</val>
            </subject>
            <predicate>
                <val>sem:iri($BSLASH||'schemaDatabase')</val>
            </predicate>
            <object>
                <val>xs:unsignedLong(db:schema-database)</val>
            </object>
        </triple>
        <triple>
            <subject>
                <val>$DIRI</val>
            </subject>
            <predicate>
                <val>sem:iri($BSLASH||'triggersDatabase')</val>
            </predicate>
            <object>
                <val>xs:unsignedLong(db:triggers-database)</val>
            </object>
        </triple>
        <triple>
            <subject>
                <val>$DIRI</val>
            </subject>
            <predicate>
                <val>sem:iri($BSLASH||'dataEncryption')</val>
            </predicate>
            <object>
                <val>xs:string('')</val>
            </object>
        </triple>
        <triple>
            <subject>
                <val>$DIRI</val>
            </subject>
            <predicate>
                <val>sem:iri($BSLASH||'encryptionKeyId')</val>
            </predicate>
            <object>
                <val>db:encryption-key-id/xs:unsignedLong(.)</val>
                <invalid-values>ignore</invalid-values>
            </object>
        </triple>
        <triple>
            <subject>
                <val>$DIRI</val>
            </subject>
            <predicate>
                <val>sem:iri($BSLASH||'retiredForestCount')</val>
            </predicate>
            <object>
                <val>xs:unsignedInt(db:retired-forest-count)</val>
                <invalid-values>ignore</invalid-values>
            </object>
        </triple>
        <triple>
            <subject>
                <val>$DIRI</val>
            </subject>
            <predicate>
                <val>sem:iri($BSLASH||'language')</val>
            </predicate>
            <object>
                <val>xs:string(db:language)</val>
            </object>
        </triple>
        <triple>
            <subject>
                <val>$DIRI</val>
            </subject>
            <predicate>
                <val>sem:iri($BSLASH||'stemmedSearches')</val>
            </predicate>
            <object>
                <val>xs:string(db:stemmed-searches)</val>
            </object>
        </triple>
        <triple>
            <subject>
                <val>$DIRI</val>
            </subject>
            <predicate>
                <val>sem:iri($BSLASH||'wordSearches')</val>
            </predicate>
            <object>
                <val>xs:boolean(db:word-searches)</val>
            </object>
        </triple>
        <triple>
            <subject>
                <val>$DIRI</val>
            </subject>
            <predicate>
                <val>sem:iri($BSLASH||'wordPositions')</val>
            </predicate>
            <object>
                <val>xs:boolean(db:word-positions)</val>
            </object>
        </triple>
        <triple>
            <subject>
                <val>$DIRI</val>
            </subject>
            <predicate>
                <val>sem:iri($BSLASH||'fastPhraseSearches')</val>
            </predicate>
            <object>
                <val>xs:boolean(db:fast-phrase-searches)</val>
            </object>
        </triple>
        <triple>
            <subject>
                <val>$DIRI</val>
            </subject>
            <predicate>
                <val>sem:iri($BSLASH||'fastReverseSearches')</val>
            </predicate>
            <object>
                <val>xs:boolean(db:fast-reverse-searches)</val>
            </object>
        </triple>
        <triple>
            <subject>
                <val>$DIRI</val>
            </subject>
            <predicate>
                <val>sem:iri($BSLASH||'tripleIndex')</val>
            </predicate>
            <object>
                <val>xs:boolean(db:triple-index)</val>
                <invalid-values>ignore</invalid-values>
            </object>
        </triple>
        <triple>
            <subject>
                <val>$DIRI</val>
            </subject>
            <predicate>
                <val>sem:iri($BSLASH||'triplePositions')</val>
            </predicate>
            <object>
                <val>xs:boolean(db:triple-positions)</val>
                <invalid-values>ignore</invalid-values>
            </object>
        </triple>
        <triple>
            <subject>
                <val>$DIRI</val>
            </subject>
            <predicate>
                <val>sem:iri($BSLASH||'fastCaseSensitiveSearches')</val>
            </predicate>
            <object>
                <val>xs:boolean(db:fast-case-sensitive-searches)</val>
            </object>
        </triple>
        <triple>
            <subject>
                <val>$DIRI</val>
            </subject>
            <predicate>
                <val>sem:iri($BSLASH||'fastDiacriticSensitiveSearches')</val>
            </predicate>
            <object>
                <val>xs:boolean(db:fast-diacritic-sensitive-searches)</val>
            </object>
        </triple>
        <triple>
            <subject>
                <val>$DIRI</val>
            </subject>
            <predicate>
                <val>sem:iri($BSLASH||'fastElementWordSearches')</val>
            </predicate>
            <object>
                <val>xs:boolean(db:fast-element-word-searches)</val>
            </object>
        </triple>
        <triple>
            <subject>
                <val>$DIRI</val>
            </subject>
            <predicate>
                <val>sem:iri($BSLASH||'elementWordPositions')</val>
            </predicate>
            <object>
                <val>xs:boolean(db:element-word-positions)</val>
            </object>
        </triple>
        <triple>
            <subject>
                <val>$DIRI</val>
            </subject>
            <predicate>
                <val>sem:iri($BSLASH||'fastElementPhraseSearches')</val>
            </predicate>
            <object>
                <val>xs:boolean(db:fast-element-phrase-searches)</val>
            </object>
        </triple>
        <triple>
            <subject>
                <val>$DIRI</val>
            </subject>
            <predicate>
                <val>sem:iri($BSLASH||'elementValuePositions')</val>
            </predicate>
            <object>
                <val>xs:boolean(db:element-value-positions)</val>
            </object>
        </triple>
        <triple>
            <subject>
                <val>$DIRI</val>
            </subject>
            <predicate>
                <val>sem:iri($BSLASH||'attributeValuePositions')</val>
            </predicate>
            <object>
                <val>xs:boolean(db:attribute-value-positions)</val>
            </object>
        </triple>
        <triple>
            <subject>
                <val>$DIRI</val>
            </subject>
            <predicate>
                <val>sem:iri($BSLASH||'fieldValueSearches')</val>
            </predicate>
            <object>
                <val>xs:boolean(db:field-value-searches)</val>
            </object>
        </triple>
        <triple>
            <subject>
                <val>$DIRI</val>
            </subject>
            <predicate>
                <val>sem:iri($BSLASH||'fieldValuePositions')</val>
            </predicate>
            <object>
                <val>xs:boolean(db:field-value-positions)</val>
            </object>
        </triple>
        <triple>
            <subject>
                <val>$DIRI</val>
            </subject>
            <predicate>
                <val>sem:iri($BSLASH||'threeCharacterSearches')</val>
            </predicate>
            <object>
                <val>xs:boolean(db:three-character-searches)</val>
            </object>
        </triple>
        <triple>
            <subject>
                <val>$DIRI</val>
            </subject>
            <predicate>
                <val>sem:iri($BSLASH||'threeCharacterWordPositions')</val>
            </predicate>
            <object>
                <val>xs:boolean(db:three-character-word-positions)</val>
            </object>
        </triple>
        <triple>
            <subject>
                <val>$DIRI</val>
            </subject>
            <predicate>
                <val>sem:iri($BSLASH||'fastElementCharacterSearches')</val>
            </predicate>
            <object>
                <val>xs:boolean(db:fast-element-character-searches)</val>
            </object>
        </triple>
        <triple>
            <subject>
                <val>$DIRI</val>
            </subject>
            <predicate>
                <val>sem:iri($BSLASH||'trailingWildcardSearches')</val>
            </predicate>
            <object>
                <val>xs:boolean(db:trailing-wildcard-searches)</val>
            </object>
        </triple>
        <triple>
            <subject>
                <val>$DIRI</val>
            </subject>
            <predicate>
                <val>sem:iri($BSLASH||'trailingWildcardWordPositions')</val>
            </predicate>
            <object>
                <val>xs:boolean(db:trailing-wildcard-word-positions)</val>
            </object>
        </triple>
        <triple>
            <subject>
                <val>$DIRI</val>
            </subject>
            <predicate>
                <val>sem:iri($BSLASH||'fastElementTrailingWildcardSearches')</val>
            </predicate>
            <object>
                <val>xs:boolean(db:fast-element-trailing-wildcard-searches)</val>
            </object>
        </triple>
        <triple>
            <subject>
                <val>$DIRI</val>
            </subject>
            <predicate>
                <val>sem:iri($BSLASH||'wordLexicons')</val>
            </predicate>
            <object>
                <val>xs:boolean(db:word-lexiconsTODO)</val>
                <invalid-values>ignore</invalid-values>
            </object>
        </triple>
        <triple>
            <subject>
                <val>$DIRI</val>
            </subject>
            <predicate>
                <val>sem:iri($BSLASH||'twoCharacterSearches')</val>
            </predicate>
            <object>
                <val>xs:boolean(db:two-character-searches)</val>
            </object>
        </triple>
        <triple>
            <subject>
                <val>$DIRI</val>
            </subject>
            <predicate>
                <val>sem:iri($BSLASH||'oneCharacterSearches')</val>
            </predicate>
            <object>
                <val>xs:boolean(db:one-character-searches)</val>
            </object>
        </triple>
        <triple>
            <subject>
                <val>$DIRI</val>
            </subject>
            <predicate>
                <val>sem:iri($BSLASH||'uriLexicon')</val>
            </predicate>
            <object>
                <val>xs:boolean(db:uri-lexicon)</val>
            </object>
        </triple>
        <triple>
            <subject>
                <val>$DIRI</val>
            </subject>
            <predicate>
                <val>sem:iri($BSLASH||'collectionLexicon')</val>
            </predicate>
            <object>
                <val>xs:boolean(db:collection-lexicon)</val>
            </object>
        </triple>
        <triple>
            <subject>
                <val>$DIRI</val>
            </subject>
            <predicate>
                <val>sem:iri($BSLASH||'reindexerEnable')</val>
            </predicate>
            <object>
                <val>xs:boolean(db:reindexer-enable)</val>
            </object>
        </triple>
        <triple>
            <subject>
                <val>$DIRI</val>
            </subject>
            <predicate>
                <val>sem:iri($BSLASH||'reindexerThrottle')</val>
            </predicate>
            <object>
                <val>xs:unsignedInt(db:reindexer-throttle)</val>
            </object>
        </triple>
        <triple>
            <subject>
                <val>$DIRI</val>
            </subject>
            <predicate>
                <val>sem:iri($BSLASH||'reindexerTimestamp')</val>
            </predicate>
            <object>
                <val>xs:unsignedLong(db:reindexer-timestamp)</val>
            </object>
        </triple>
        <triple>
            <subject>
                <val>$DIRI</val>
            </subject>
            <predicate>
                <val>sem:iri($BSLASH||'directoryCreation')</val>
            </predicate>
            <object>
                <val>xs:string(db:directory-creation)</val>
            </object>
        </triple>
        <triple>
            <subject>
                <val>$DIRI</val>
            </subject>
            <predicate>
                <val>sem:iri($BSLASH||'maintainLastModified')</val>
            </predicate>
            <object>
                <val>xs:boolean(db:maintain-last-modified)</val>
            </object>
        </triple>
        <triple>
            <subject>
                <val>$DIRI</val>
            </subject>
            <predicate>
                <val>sem:iri($BSLASH||'maintainDirectoryLastModified')</val>
            </predicate>
            <object>
                <val>xs:boolean(db:maintain-directory-last-modified)</val>
            </object>
        </triple>
        <triple>
            <subject>
                <val>$DIRI</val>
            </subject>
            <predicate>
                <val>sem:iri($BSLASH||'inheritPermissions')</val>
            </predicate>
            <object>
                <val>xs:boolean(db:inherit-permissions)</val>
            </object>
        </triple>
        <triple>
            <subject>
                <val>$DIRI</val>
            </subject>
            <predicate>
                <val>sem:iri($BSLASH||'inheritCollections')</val>
            </predicate>
            <object>
                <val>xs:boolean(db:inherit-collections)</val>
            </object>
        </triple>
        <triple>
            <subject>
                <val>$DIRI</val>
            </subject>
            <predicate>
                <val>sem:iri($BSLASH||'inheritQuality')</val>
            </predicate>
            <object>
                <val>xs:boolean(db:inherit-quality)</val>
            </object>
        </triple>
        <triple>
            <subject>
                <val>$DIRI</val>
            </subject>
            <predicate>
                <val>sem:iri($BSLASH||'inMemoryLimit')</val>
            </predicate>
            <object>
                <val>xs:unsignedLong(db:in-memory-limit)</val>
            </object>
        </triple>
        <triple>
            <subject>
                <val>$DIRI</val>
            </subject>
            <predicate>
                <val>sem:iri($BSLASH||'inMemoryListSize')</val>
            </predicate>
            <object>
                <val>xs:unsignedLong(db:in-memory-list-size)</val>
            </object>
        </triple>
        <triple>
            <subject>
                <val>$DIRI</val>
            </subject>
            <predicate>
                <val>sem:iri($BSLASH||'inMemoryTreeSize')</val>
            </predicate>
            <object>
                <val>xs:unsignedLong(db:in-memory-tree-size)</val>
            </object>
        </triple>
        <triple>
            <subject>
                <val>$DIRI</val>
            </subject>
            <predicate>
                <val>sem:iri($BSLASH||'inMemoryRangeIndexSize')</val>
            </predicate>
            <object>
                <val>xs:unsignedLong(db:in-memory-range-index-size)</val>
            </object>
        </triple>
        <triple>
            <subject>
                <val>$DIRI</val>
            </subject>
            <predicate>
                <val>sem:iri($BSLASH||'inMemoryReverseIndexSize')</val>
            </predicate>
            <object>
                <val>xs:unsignedLong(db:in-memory-reverse-index-size)</val>
            </object>
        </triple>
        <triple>
            <subject>
                <val>$DIRI</val>
            </subject>
            <predicate>
                <val>sem:iri($BSLASH||'inMemoryTripleIndexSize')</val>
            </predicate>
            <object>
                <val>xs:unsignedLong(db:in-memory-triple-index-size)</val>
                <invalid-values>ignore</invalid-values>
            </object>
        </triple>
        <triple>
            <subject>
                <val>$DIRI</val>
            </subject>
            <predicate>
                <val>sem:iri($BSLASH||'inMemoryGeospatialRegionIndexSize')</val>
            </predicate>
            <object>
                <val>xs:unsignedLong(db:in-memory-geospatial-region-index-size)</val>
                <invalid-values>ignore</invalid-values>
            </object>
        </triple>
        <triple>
            <subject>
                <val>$DIRI</val>
            </subject>
            <predicate>
                <val>sem:iri($BSLASH||'largeSizeThreshold')</val>
            </predicate>
            <object>
                <val>xs:unsignedLong(db:large-size-threshold)</val>
            </object>
        </triple>
        <triple>
            <subject>
                <val>$DIRI</val>
            </subject>
            <predicate>
                <val>sem:iri($BSLASH||'locking')</val>
            </predicate>
            <object>
                <val>xs:string(db:locking)</val>
            </object>
        </triple>
        <triple>
            <subject>
                <val>$DIRI</val>
            </subject>
            <predicate>
                <val>sem:iri($BSLASH||'journaling')</val>
            </predicate>
            <object>
                <val>xs:string(db:journaling)</val>
            </object>
        </triple>
        <triple>
            <subject>
                <val>$DIRI</val>
            </subject>
            <predicate>
                <val>sem:iri($BSLASH||'journalSize')</val>
            </predicate>
            <object>
                <val>xs:unsignedLong(db:journal-size)</val>
            </object>
        </triple>
        <triple>
            <subject>
                <val>$DIRI</val>
            </subject>
            <predicate>
                <val>sem:iri($BSLASH||'journalCount')</val>
            </predicate>
            <object>
                <val>xs:unsignedLong(db:journal-count)</val>
            </object>
        </triple>
        <triple>
            <subject>
                <val>$DIRI</val>
            </subject>
            <predicate>
                <val>sem:iri($BSLASH||'preallocateJournals')</val>
            </predicate>
            <object>
                <val>xs:boolean(db:preallocate-journals)</val>
            </object>
        </triple>
        <triple>
            <subject>
                <val>$DIRI</val>
            </subject>
            <predicate>
                <val>sem:iri($BSLASH||'preloadMappedData')</val>
            </predicate>
            <object>
                <val>xs:boolean(db:preload-mapped-data)</val>
            </object>
        </triple>
        <triple>
            <subject>
                <val>$DIRI</val>
            </subject>
            <predicate>
                <val>sem:iri($BSLASH||'preloadReplicaMappedData')</val>
            </predicate>
            <object>
                <val>xs:boolean(db:preload-replica-mapped-data)</val>
            </object>
        </triple>
        <triple>
            <subject>
                <val>$DIRI</val>
            </subject>
            <predicate>
                <val>sem:iri($BSLASH||'rangeIndexOptimize')</val>
            </predicate>
            <object>
                <val>xs:string(db:range-index-optimize)</val>
            </object>
        </triple>
        <triple>
            <subject>
                <val>$DIRI</val>
            </subject>
            <predicate>
                <val>sem:iri($BSLASH||'positionsListMaxSize')</val>
            </predicate>
            <object>
                <val>xs:unsignedLong(db:positions-list-max-size)</val>
            </object>
        </triple>
        <triple>
            <subject>
                <val>$DIRI</val>
            </subject>
            <predicate>
                <val>sem:iri($BSLASH||'formatCompatibility')</val>
            </predicate>
            <object>
                <val>xs:string(db:format-compatibility)</val>
            </object>
        </triple>
        <triple>
            <subject>
                <val>$DIRI</val>
            </subject>
            <predicate>
                <val>sem:iri($BSLASH||'indexDetection')</val>
            </predicate>
            <object>
                <val>xs:string(db:index-detection)</val>
            </object>
        </triple>
        <triple>
            <subject>
                <val>$DIRI</val>
            </subject>
            <predicate>
                <val>sem:iri($BSLASH||'expungeLocks')</val>
            </predicate>
            <object>
                <val>xs:string(db:expunge-locks)</val>
            </object>
        </triple>
        <triple>
            <subject>
                <val>$DIRI</val>
            </subject>
            <predicate>
                <val>sem:iri($BSLASH||'tfNormalization')</val>
            </predicate>
            <object>
                <val>xs:string(db:tf-normalization)</val>
            </object>
        </triple>
        <triple>
            <subject>
                <val>$DIRI</val>
            </subject>
            <predicate>
                <val>sem:iri($BSLASH||'mergePriority')</val>
            </predicate>
            <object>
                <val>xs:string(db:merge-priority)</val>
            </object>
        </triple>
        <triple>
            <subject>
                <val>$DIRI</val>
            </subject>
            <predicate>
                <val>sem:iri($BSLASH||'mergeMaxSize')</val>
            </predicate>
            <object>
                <val>xs:unsignedLong(db:merge-max-size)</val>
            </object>
        </triple>
        <triple>
            <subject>
                <val>$DIRI</val>
            </subject>
            <predicate>
                <val>sem:iri($BSLASH||'mergeMinSize')</val>
            </predicate>
            <object>
                <val>xs:unsignedLong(db:merge-min-size)</val>
            </object>
        </triple>
        <triple>
            <subject>
                <val>$DIRI</val>
            </subject>
            <predicate>
                <val>sem:iri($BSLASH||'mergeMinRatio')</val>
            </predicate>
            <object>
                <val>xs:unsignedLong(db:merge-min-ratio)</val>
            </object>
        </triple>
        <triple>
            <subject>
                <val>$DIRI</val>
            </subject>
            <predicate>
                <val>sem:iri($BSLASH||'mergeTimestamp')</val>
            </predicate>
            <object>
                <val>xs:unsignedLong(db:merge-timestamp)</val>
            </object>
        </triple>
        <triple>
            <subject>
                <val>$DIRI</val>
            </subject>
            <predicate>
                <val>sem:iri($BSLASH||'retainUntilBackup')</val>
            </predicate>
            <object>
                <val>xs:boolean(db:retain-until-backup)</val>
                <invalid-values>ignore</invalid-values>
            </object>
        </triple>
        <triple>
            <subject>
                <val>$DIRI</val>
            </subject>
            <predicate>
                <val>sem:iri($BSLASH||'mergeBlackouts')</val>
            </predicate>
            <object>
                <val>xs:string(db:merge-blackoutsTODO)</val>
                <invalid-values>ignore</invalid-values>
            </object>
        </triple>
        <triple>
            <subject>
                <val>$DIRI</val>
            </subject>
            <predicate>
                <val>sem:iri($BSLASH||'databaseBackups')</val>
            </predicate>
            <object>
                <val>xs:string(db:database-backupsTODO)</val>
                <invalid-values>ignore</invalid-values>
            </object>
        </triple>
        <triple>
            <subject>
                <val>$DIRI</val>
            </subject>
            <predicate>
                <val>sem:iri($BSLASH||'fragmentRoots')</val>
            </predicate>
            <object>
                <val>xs:string(db:fragment-rootsTODO)</val>
                <invalid-values>ignore</invalid-values>
            </object>
        </triple>
        <triple>
            <subject>
                <val>$DIRI</val>
            </subject>
            <predicate>
                <val>sem:iri($BSLASH||'fragmentParents')</val>
            </predicate>
            <object>
                <val>xs:string(db:fragment-parentsTODO)</val>
                <invalid-values>ignore</invalid-values>
            </object>
        </triple>
        <triple>
            <subject>
                <val>$DIRI</val>
            </subject>
            <predicate>
                <val>sem:iri($BSLASH||'elementWordQueryThroughs')</val>
            </predicate>
            <object>
                <val>xs:string(db:element-word-query-throughsTODO)</val>
                <invalid-values>ignore</invalid-values>
            </object>
        </triple>
        <triple>
            <subject>
                <val>$DIRI</val>
            </subject>
            <predicate>
                <val>sem:iri($BSLASH||'phraseThroughs')</val>
            </predicate>
            <object>
                <val>xs:string(db:phrase-throughsTODO)</val>
                <invalid-values>ignore</invalid-values>
            </object>
        </triple>
        <triple>
            <subject>
                <val>$DIRI</val>
            </subject>
            <predicate>
                <val>sem:iri($BSLASH||'phraseArounds')</val>
            </predicate>
            <object>
                <val>xs:string(db:phrase-aroundsTODO)</val>
                <invalid-values>ignore</invalid-values>
            </object>
        </triple>
        <triple>
            <subject>
                <val>$DIRI</val>
            </subject>
            <predicate>
                <val>sem:iri($BSLASH||'rangeElementIndexes')</val>
            </predicate>
            <object>
                <val>xs:string(db:range-element-indexesTODO)</val>
                <invalid-values>ignore</invalid-values>
            </object>
        </triple>
        <triple>
            <subject>
                <val>$DIRI</val>
            </subject>
            <predicate>
                <val>sem:iri($BSLASH||'rangeElementAttributeIndexes')</val>
            </predicate>
            <object>
                <val>xs:string(db:range-element-attribute-indexesTODO)</val>
                <invalid-values>ignore</invalid-values>
            </object>
        </triple>
        <triple>
            <subject>
                <val>$DIRI</val>
            </subject>
            <predicate>
                <val>sem:iri($BSLASH||'elementWordLexicons')</val>
            </predicate>
            <object>
                <val>xs:string(db:element-word-lexiconsTODO)</val>
                <invalid-values>ignore</invalid-values>
            </object>
        </triple>
        <triple>
            <subject>
                <val>$DIRI</val>
            </subject>
            <predicate>
                <val>sem:iri($BSLASH||'elementAttributeWordLexicons')</val>
            </predicate>
            <object>
                <val>xs:string(db:element-attribute-word-lexiconsTODO)</val>
                <invalid-values>ignore</invalid-values>
            </object>
        </triple>
        <triple>
            <subject>
                <val>$DIRI</val>
            </subject>
            <predicate>
                <val>sem:iri($BSLASH||'pathNamespaces')</val>
            </predicate>
            <object>
                <val>xs:string(db:path-namespacesTODO)</val>
                <invalid-values>ignore</invalid-values>
            </object>
        </triple>
        <triple>
            <subject>
                <val>$DIRI</val>
            </subject>
            <predicate>
                <val>sem:iri($BSLASH||'rangePathIndexes')</val>
            </predicate>
            <object>
                <val>xs:string(db:range-path-indexesTODO)</val>
                <invalid-values>ignore</invalid-values>
            </object>
        </triple>
        <triple>
            <subject>
                <val>$DIRI</val>
            </subject>
            <predicate>
                <val>sem:iri($BSLASH||'fields')</val>
            </predicate>
            <object>
                <val>xs:string(db:fieldsTODO)</val>
                <invalid-values>ignore</invalid-values>
            </object>
        </triple>
        <triple>
            <subject>
                <val>$DIRI</val>
            </subject>
            <predicate>
                <val>sem:iri($BSLASH||'rangeFieldIndexes')</val>
            </predicate>
            <object>
                <val>xs:string(db:range-field-indexesTODO)</val>
                <invalid-values>ignore</invalid-values>
            </object>
        </triple>
        <triple>
            <subject>
                <val>$DIRI</val>
            </subject>
            <predicate>
                <val>sem:iri($BSLASH||'geospatialElementIndexes')</val>
            </predicate>
            <object>
                <val>xs:string(db:geospatial-element-indexesTODO)</val>
                <invalid-values>ignore</invalid-values>
            </object>
        </triple>
        <triple>
            <subject>
                <val>$DIRI</val>
            </subject>
            <predicate>
                <val>sem:iri($BSLASH||'geospatialElementChildIndexes')</val>
            </predicate>
            <object>
                <val>xs:string(db:geospatial-element-child-indexesTODO)</val>
                <invalid-values>ignore</invalid-values>
            </object>
        </triple>
        <triple>
            <subject>
                <val>$DIRI</val>
            </subject>
            <predicate>
                <val>sem:iri($BSLASH||'geospatialElementPairIndexes')</val>
            </predicate>
            <object>
                <val>xs:string(db:geospatial-element-pair-indexesTODO)</val>
                <invalid-values>ignore</invalid-values>
            </object>
        </triple>
        <triple>
            <subject>
                <val>$DIRI</val>
            </subject>
            <predicate>
                <val>sem:iri($BSLASH||'geospatialElementAttributePairIndexes')</val>
            </predicate>
            <object>
                <val>xs:string(db:geospatial-element-attribute-pair-indexesTODO)</val>
                <invalid-values>ignore</invalid-values>
            </object>
        </triple>
        <triple>
            <subject>
                <val>$DIRI</val>
            </subject>
            <predicate>
                <val>sem:iri($BSLASH||'geospatialPathIndexes')</val>
            </predicate>
            <object>
                <val>xs:string(db:geospatial-path-indexesTODO)</val>
                <invalid-values>ignore</invalid-values>
            </object>
        </triple>
        <triple>
            <subject>
                <val>$DIRI</val>
            </subject>
            <predicate>
                <val>sem:iri($BSLASH||'geospatialRegionPathIndexes')</val>
            </predicate>
            <object>
                <val>xs:string(db:geospatial-region-path-indexesTODO)</val>
                <invalid-values>ignore</invalid-values>
            </object>
        </triple>
        <triple>
            <subject>
                <val>$DIRI</val>
            </subject>
            <predicate>
                <val>sem:iri($BSLASH||'defaultRulesets')</val>
            </predicate>
            <object>
                <val>xs:string(db:default-rulesetsTODO)</val>
                <invalid-values>ignore</invalid-values>
            </object>
        </triple>
        <triple>
            <subject>
                <val>$DIRI</val>
            </subject>
            <predicate>
                <val>sem:iri($BSLASH||'databaseReplication')</val>
            </predicate>
            <object>
                <val>xs:string(db:database-replicationTODO)</val>
                <invalid-values>ignore</invalid-values>
            </object>
        </triple>
        <triple>
            <subject>
                <val>$DIRI</val>
            </subject>
            <predicate>
                <val>sem:iri($BSLASH||'databaseReferences')</val>
            </predicate>
            <object>
                <val>xs:string(db:database-referencesTODO)</val>
                <invalid-values>ignore</invalid-values>
            </object>
        </triple>
        <triple>
            <subject>
                <val>$DIRI</val>
            </subject>
            <predicate>
                <val>sem:iri($BSLASH||'rebalancerEnable')</val>
            </predicate>
            <object>
                <val>xs:boolean(db:rebalancer-enable)</val>
                <invalid-values>ignore</invalid-values>
            </object>
        </triple>
        <triple>
            <subject>
                <val>$DIRI</val>
            </subject>
            <predicate>
                <val>sem:iri($BSLASH||'rebalancerThrottle')</val>
            </predicate>
            <object>
                <val>xs:unsignedInt(db:rebalancer-throttle)</val>
                <invalid-values>ignore</invalid-values>
            </object>
        </triple>
        <triple>
            <subject>
                <val>$DIRI</val>
            </subject>
            <predicate>
                <val>sem:iri($BSLASH||'assignmentPolicy')</val>
            </predicate>
            <object>
                <val>xs:string(db:assignment-policy)</val>
                <invalid-values>ignore</invalid-values>
            </object>
        </triple>
    </triples>
    <templates>
        <template>
            <context>db:forests/db:forest-id</context>
            <triples>
                <triple>
                    <subject>
                        <val>$DIRI</val>
                    </subject>
                    <predicate>
                        <val>sem:iri($BSLASH||'hasForest')</val>
                    </predicate>
                    <object>
                        <val>sem:iri('http://marklogic.com/sdmp/forest#'||xs:string(.))</val>
                    </object>
                </triple>
            </triples>
        </template>
    </templates>
</template>
